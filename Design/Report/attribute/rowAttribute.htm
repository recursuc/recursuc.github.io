<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
    <title>行属性页</title>
    <meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
    <link rel="Stylesheet" type="text/css" href="../ext/resources/css/ext-all.css" />
    <link rel="Stylesheet" type="text/css" href="../ext/resources/css/xtheme-gray.css" />
    <link rel="Stylesheet" type="text/css" href="../ext/resources/css/tabs.css" />
    <script src="../js/attribute.js" type="text/javascript"></script>
    <script type="text/javascript" src="../js/table_operate.min.js"></script>
    <style type="text/css">
        .x-tab-panel-body .x-panel-body
        {
            padding: 10px;
        }
        #textRowStyle
        {
            width: 93px;
        }
    </style>
</head>
<body onload="_start();" onkeydown="submit();">
    <div id="tabs">
        <div id="ab" class="x-hide-display">
            <table style="font-size: 12px; width: 100%;">
                <tr>
                    <td style="width: 80px;">
                        所属区域：
                    </td>
                    <td style="width: 40px;">
                        <select id="areaSelect">
                            <option value="1">标题区</option>
                            <option value="2">表头区</option>
                            <option value="3">数据区</option>
                            <option value="4">表尾区</option>
                            <option value="5">页眉区</option>
                            <option value="6">页脚区</option>
                        </select>
                    </td>
                    <td style="width: 20px;">
                        <input type="checkbox" id="afterPage" />
                    </td>
                    <td>
                        行后分页
                    </td>
                </tr>
                <tr>
                    <td align="center">
                        行高：
                    </td>
                    <td align="right" colspan="2">
                        <input type="text" id="textRowStyle" onkeydown="submit();" style="width: 60px;" /><b><label>(px)</label></b>
                    </td>
                    <td/>
                </tr>
            </table>
        </div>
    </div>
    <!-- 按钮区域 -->
    <div id="buttons" style="text-align: right;">
        <table>
            <tr>
                <td style="padding-right: 20px;">
                    <!-- 确定按钮 -->
                    <button id="cmdOk" style="display: block; font-size: 12px; width: 65px; height: 21px;
                        background-color: #ffffff; border-style: none; border: 0px; background-image: url(../skins/blue/img/button_ok.gif);"
                        onclick="ok()">
                    </button>
                </td>
                <td style="padding-right: 20px;">
                    <!-- 取消按钮 -->
                    <button id="cmdClose" style="display: block; font-size: 12px; width: 65px; height: 21px;
                        background-color: #ffffff; border-style: none; border: 0px; background-image: url(../skins/blue/img/button_close.gif);"
                        onclick="closeWin()">
                    </button>
                </td>
            </tr>
        </table>
    </div>
</body>
<script type="text/javascript" src="../ext/adapter/ext/ext-base.js"></script>
<script type="text/javascript" src="../ext/ext-all.js"></script>
<script type="text/javascript">
    Ext.onReady(function () {
        var tabs = new Ext.TabPanel({
            renderTo: 'tabs',
            width: "100%",
            height: ChangeTabsSize(),
            activeTab: 0,
            frame: true,
            defaults: { autoHeight: true },
            items: [
                    { contentEl: 'ab', title: '  样式  ' }
                ]
        });
    });

    //改变TAB的样式
    function ChangeTabsSize() {
        var PageWidth = document.body.clientWidth;
        var PageHeight = document.body.clientHeight;
        var ButtonsHeight = document.getElementById("buttons").offsetHeight;
        var TabsHeight = PageHeight - ButtonsHeight - 10;
        return TabsHeight;
    }

    var obj = window.dialogArguments;       //获取父窗口传过来的参数
    var leftTable = obj.document.getElementById("tbLeftHead");      //获取左侧表格对象

    var table = null;                       //前台的报表对象

    if (obj != undefined)
        table = obj.document.getElementById("tbData");      //获得报表对象

    var row = null;                                 //选中行对象
    function _start() {
        row = table.rows[obj.indexY];       //获得所选中行对象
        if (row.childNodes[0].getAttribute("isPaginatingAfterRow") == "true") {
            var oAfterPage = document.getElementById("afterPage");
            oAfterPage.checked = true;
        }
        textRowStyle.value = parseInt(row.style.height.split("px")[0]);

        if (row.getAttribute("HContentRegionType") != null && row.getAttribute("HContentRegionType") != "") {
            areaSelect.selectedIndex = parseInt(row.getAttribute("HContentRegionType") - 1);
        } else {
            areaSelect.selectedIndex = 2;
            //            var key = true;
            //            var hContentRegionTypeValue = 3;
            //            for (var i = 0; i < row.cells.length; i++) {
            //                var sContentRegionType = row.childNodes[i].getAttribute("HContentRegionType");
            //                if (row.childNodes[i].nodeName.toLowerCase() != "RAD") {
            //                    if (sContentRegionType == 3) {
            //                        key = false;
            //                        break;
            //                    } else {
            //                        hContentRegionTypeValue = sContentRegionType;
            //                    } 
            //                } 
            //            }
            //            areaSelect.selectedIndex = key ? areaSelect.selectedIndex = parseInt(hContentRegionTypeValue - 1) : 2;
            //        }
        }
    }
    function ok() {
        row.style.height = textRowStyle.value;
        leftTable.rows[obj.indexY].children[0].style.height = textRowStyle.value;
        // obj.SetTextFrame(obj.indexX, obj.indexY, obj.endX, obj.endY);       //调用方法刷新选中区的边框
        dialogArguments.location.reload();
        var oAfterPage = document.getElementById("afterPage");
        var oCells = row.childNodes;
        if (oAfterPage.checked == true) {
            row.IsPaginatingAfterRow = "true";
            for (var i = 0; i < oCells.length; i++) {
                var oCell = oCells[i];
                oCell.setAttribute("IsPaginatingAfterRow", "true");
            }
        } else {
            row.IsPaginatingAfterRow = "";
            for (var i = 0; i < oCells.length; i++) {
                var oCell = oCells[i];
                oCell.setAttribute("IsPaginatingAfterRow", "");
            }
        }
        row.setAttribute("HContentRegionType", areaSelect.value);
        for (var i = 0; i < oCells.length; i++) {
            var oCell = oCells[i];
            oCell.setAttribute("HContentRegionType", areaSelect.value);
        }
        window.close();
    }
    function submit() {             //按enter键提交
        if (event.keyCode == 13) {
            ok();
        }
    }
</script>
</html>
