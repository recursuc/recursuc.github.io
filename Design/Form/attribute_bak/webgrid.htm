<!DOCTYPE HTML>
<html>
<head>
<title></title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link href="../../../sfk/panel/sfk_panel.css" rel="stylesheet"
	type="text/css" />
<link href="../../../sfk/accordion/sfk_accordion.css" rel="stylesheet"
	type="text/css" />
<link href="../../../sfk/tab/sfk_tab.css" rel="stylesheet"
	type="text/css" />
<link href="../../../sfk/dialog/sfk_dialog.css" rel="stylesheet"
	type="text/css" />
<style type="text/css">
.attrTable {
	table-layout: fixed;
	font-size: 11px;
	border-collapse: collapse;
	position: static;
	text-align: left;
}

.attrTable td {
	overflow: hidden;
}

.attrTable td input {
	width: 104px;
	height: 19px;
}
</style>
<script src="../../../sfk/sfk.js" type="text/javascript"></script>
<script src="../../DataSource/datasource.js" type="text/javascript"></script>
<script src="../../../sfk/panel/sfk_panel.js" type="text/javascript"></script>
<script src="../../../sfk/accordion/sfk_accordion.js"
	type="text/javascript"></script>
<script src="../../../../publicJS/jscolor-1.3.13/jscolor/jscolor.js"
	type="text/javascript"></script>
<script src="../../property.js" type="text/javascript"></script>
<script src="../../../../publicJS/customDialog/lhgdialog.js"
	type="text/javascript"></script>
<script src="../../../../publicJS/customDialog/showModalDialog.js"
	type="text/javascript"></script>
<script src="../../../sfk/dialog/sfk_dialog.js" type="text/javascript"></script>
<script src="../../../sfk/grid/sfk_grid.js" type="text/javascript"></script>
<script type="text/javascript">
	var IsQuery = "",curControl = window.parent._data_[0], datasource = window.parent._data_[1], curDs = null, curDt = null;
	//        curControl.Id = "wwwwww";
	//        curControl.Name = "文本框";
	//        curControl.DefaultValue = "aaa";

	window.onload = function() {
		var typeName = window.parent._data_[0].parent.pDesign.name, drSelect = document.getElementById("datatable").parentElement.parentElement;
		if (/.list$/.test(typeName)) {
			document.getElementById("check_column").style.display = "";
			document.getElementById("check_array").style.display = "";
			document.getElementById("check_box").style.display = "";
			document.getElementById("check_del").style.display = "";
			document.getElementById("check_delcol").style.display = "";
			document.getElementById("frm_gridctype").style.display = "none";
			document.getElementById("list_gridctype").style.display = "";
			document.getElementById("check_boxname").style.display = "";
			//document.getElementById("check_columnpage").style.display = "";
			document.getElementById("check_columnpagecount").style.display = "";
			drSelect.style.display = "none";
			document.getElementById("cascadeparas").style.display = "";
			document.getElementById("IsQueryList").value = IsQuery = "query";
		}
		
		// alert(ss.split("=")[1]);
		//            datasource = new DataSource();
		//            for (var i = 0; i < 3; i++) {
		//                var key = "";
		//                if (i == 0)
		//                    key = "aa";
		//                else if (i == 1)
		//                    key = "bb";
		//                else
		//                    key = "cc";

		//                var ds = new DataSet();
		//                ds.Name = key;

		//                for (var j = 0; j < 3; j++) {
		//                    var key1 = "";
		//                    if (j == 0)
		//                        key1 = "11";
		//                    else if (j == 1)
		//                        key1 = "22";
		//                    else
		//                        key1 = "33";

		//                    var dt = new DataTable();
		//                    dt.TableName = key + "_" + key1;

		//                    for (var k = 0; k < 3; k++) {
		//                        var key2 = "";
		//                        if (k == 0)
		//                            key2 = "44";
		//                        else if (k == 1)
		//                            key2 = "55";
		//                        else
		//                            key2 = "66";

		//                        var dc = new DataColumn();
		//                        dc.Name = key + "_" + key1 + "_" + key2;

		//                        dt.DataColumns.push(dc);
		//                    }
		//                    ds.DataTables.push(dt);
		//                }
		//                datasource.DataSets.push(ds);
		//            }
		//console.log(window.dialogArgs);

		new Property(
				{
					target : document.body,
					onchange : $F.bind(curControl, curControl.setProp),
					control : curControl.cfgData,
					onBeforeHandle : null,
					onHandle : function(sPropName, oNode) {
						var sHtml = "<option value='null'>---请选择---</option>";
						switch (sPropName.toLowerCase()) {
						case "dataset":
							if (datasource) {
								var datasets = [];
								if(IsQuery == "query"){
									datasets = DataSource.prototype.getDsByType.call(datasource,"0");
								}
								else{
									datasets= datasource.DataSets;
								}
								for ( var i = 0, len = datasets.length; i < len; i++) {
									sHtml += DataSet.prototype.getHeString
											.call(datasets[i]);
								}
								//curDs = datasource.DataSets[0];
								oNode.innerHTML = sHtml;
							}
							break;
                       case "datatable":
                           if (curDs) {
                               for (var i = 0, len = curDs.DataTables.length; i < len; i++) {
                                   sHtml += DataTable.prototype.getHeString.call(curDs.DataTables[i]);
                               }
                               //curDt = curDs.DataTables[0];
                               oNode.innerHTML = sHtml;
                           }
                           break;
						case "datacolumn":
							if(IsQuery == "query"){
								if (curDs) {
									var columns = DataSet.prototype.getColumnFields.apply(curDs);
									for (var i = 0, len = columns.length; i < len; i++) {
										sHtml += DataColumn.prototype.getHeString
												.call(columns[i]);
									}
									oNode.innerHTML = sHtml;
								}
							}
							else{
								if (curDt) {
									for (var i = 0, len = curDt.DataColumns.length; i < len; i++) {
										sHtml += DataColumn.prototype.getHeString
												.call(curDt.DataColumns[i]); //DataColumn.prototype.getHeString.call(curDt.DataColumns[i])
									}
									oNode.innerHTML = sHtml;
								}
							}
							break;
						default:
							break;
						}
					},
					onHandled : function() {
						var doc = document, accor = new Accordion({
							target : doc.getElementById("barContainer"),
							container : doc.getElementById("txtContainer"),
							titleStyle : {},
							contentStyle : {},
							mode : 1
						});
						//初始化页面
						InitColumnData();
					},
					walkDOM : function() {
						var oTables = document.getElementsByTagName("table");
						for ( var i = 0, len = oTables.length; i < len; i++) {
							for ( var j = 0, cou = oTables[i].rows.length; j < cou; j++) {
								oTables[i].rows[j].cells[1]
										&& oTables[i].rows[j].cells[1].children[0]
										&& this
												.load(oTables[i].rows[j].cells[1].children[0]);
							}
						}
					}
				}).start();
	}
</script>
</head>
<body style="background: rgb(240, 240, 240); margin: 0px;">
	<div id="txtContainer" style="margin: 0px 3px; height: 80%;">
		<ul class="acc_nav" id="barContainer">
			<li>
				<div>
					<div class="title">
						基本属性
						<div class="oper">
							<a href="#" panel="1">un</a>
						</div>
					</div>
					<div class="content">
						<table width="100%" class="attrTable" border="1" cellpadding="0"
							cellspacing="0">
							<tr>
								<td style="width: 60px;"><font color="red">控件ID</font></td>
								<td><input type="text" data-propname="cid" id="id_table" />
								</td>
							</tr>
							<tr>
								<td><font color="red">中文名</font></td>
								<td><input type="text" data-propname="value"
									id="name_table" /></td>
							</tr>
							<tr style="display: none" id="check_boxname">
								<td>列表名称</td>
								<td><input type="text" data-propname="queryname"
									id="name_check" /></td>
							</tr>
							<tr id="check_array">
								<td style="">序列号</td>
								<td><input type="checkbox" data-propname="hasserialnum"
									id="Checkbox2" /></td>
							</tr>
							<tr id="check_column">
								<td style="width: 60px;">Checkbox列</td>
								<td><input type="checkbox" data-propname="hascheckboxcol"
									id="Checkbox1" /></td>
							</tr>							
							<tr style="display: none" id="check_box">
								<td>Checkbox列对应字段</td>
								<td><input id="check_corres" data-propname="cboxcolname" type="text"><!--  <select id="check_corres" data-propname="cboxcolname"
									style="font-size: 12px; width: 90px; height: 18px; text-align: left"
									onchange="">
										<option value="null" selected="selected">--请选择--</option>
										<option value="F_id">F_id</option>
								</select>--></td>
							</tr>
							<tr style="display: none" id="check_del">
								<td>删除操作对应表名</td>
								<td><input type="text" id="deltablename"
									data-propname="deltablename" /></td>
							</tr>
							<tr style="display: none" id="check_delcol">
								<td>删除操作对应字段名</td>
								<td><input type="text" id="delcolname"
									data-propname="delcolname" /></td>
							</tr>
							<!--<tr style="display: none" id="check_columnpage">
								<td style="width: 60px;">分页</td>
								<td><input type="checkbox" data-propname="ispager"
									id="Checkbox3" /></td>
							</tr>  -->
							<tr style="display: none" id="check_columnpagecount">
								<td>每页条数</td>
								<td><input type="text" data-propname="rowsnum"
									id="name_checkpagecount" value="10" /></td>
							</tr>
							<!--  <tr>
                                <td>
                                    皮肤
                                </td>
                                <td>
                                    <select id="SkinType">
                                        <option value="null" selected="selected">---请选择---</option>
                                    </select>
                                </td>
                            </tr>-->
						</table>
					</div>
				</div>
			</li>
			<li>
				<div>
					<div class="title">
						样式
						<div class="oper">
							<a href="#" panel="1">un</a>
						</div>
					</div>
					<div class="content">
						<table class="attrTable" border="1" cellpadding="0"
							cellspacing="0" width="100%">
							<!-- tr>
                                <td style="">
                                    定位类型
                                </td>
                                <td>
                                    <select data-propname="style.position" style="font-size: 12px; width: 90px; height: 18px;
                                        text-align: left">
                                        <option value="static">静态</option>
                                        <option value="absolute">绝对</option>
                                    </select>
                                </td>
                            </tr -->
							<tr>
								<td>左</td>
								<td><input type="text" data-propname="style.left"
									style="width: 50px;" id="left_table" /></td>
							</tr>
							<tr>
								<td>上</td>
								<td><input type="text" data-propname="style.top"
									style="width: 50px;" id="top_table" /></td>
							</tr>
							<tr>
								<td>宽</td>
								<td><input type="text" data-propname="style.width"
									style="width: 50px;" id="width_table" /></td>
							</tr>
							<tr>
								<td>高</td>
								<td><input type="text" data-propname="style.height"
									style="width: 50px;" id="height_table" /></td>
							</tr>
							<!--                            <tr style="">
                                <td>
                                    单元格边距
                                </td>
                                <td>
                                    <div class='xpSpin' defaultvalue="undefined" id="NumEdit1" field="undefined" dataset="undefined"
                                        min="-1" value="undefined" align="left" style='align: left; width: 80px; height: 22px;'
                                        nextnum="1" max="32000" fontsize="12px" fontstyle="" fontfamily="" backgroundcolor=""
                                        color="" fontweight="" enabled="否" display="block" left="86px" top="47px" width="78px"
                                        height="22px">
                                    </div>
                                </td>
                            </tr>-->
							<!--                            <tr>
                                <td style="">
                                    单元格间距
                                </td>
                                <td style="">
                                    <div class='xpSpin' defaultvalue="undefined" id="NumEdit2" field="undefined" dataset="undefined"
                                        min="-1" value="undefined" align="left" style='align: left; width: 80px; height: 22px;'
                                        nextnum="1" max="32000" fontsize="12px" fontstyle="" fontfamily="" backgroundcolor=""
                                        color="" fontweight="" enabled="否" width="78px" height="22px">
                                    </div>
                                </td>
                            </tr>-->
						</table>
					</div>
				</div>
			</li>
			<!--            <li>
                <div>
                    <div class="title">
                        边框信息<div class="oper">
                            <a href="#" panel="1">un</a>
                        </div>
                    </div>
                    <div class="content">
                        <table class="attrTable" border="1" cellpadding="0" cellspacing="0">
                            <tr>
                                <td style="width: 60px;">
                                    粗细
                                </td>
                                <td style="">
                                    <div class='xpSpin' id="NumEdit3" min="-1" align="left" value="-1" style='width: 73px;
                                        height: 20px; display: block; white-space: nowrap' nextnum="1" max="32000" nowrap>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    样式
                                </td>
                                <td>
                                    <select id="topType" style="font-size: 12px; width: 90px; height: 18px; text-align: left">
                                        <option value="solid">实线</option>
                                        <option value="double">双线</option>
                                        <option value="groove">3D凹槽</option>
                                        <option value="ridge">菱形边框</option>
                                        <option value="inset">3D凹边</option>
                                        <option value="outset">3D凸边</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td style="width: 15%">
                                    <input type="button" id="borderColorButton" style="font-size: 12px; width: 24px;
                                        height: 24px; border: 0px; border-style: none; background-color: #ffffff;" onclick="borderColor()" />
                                </td>
                                <td style="">
                                    <div id="borderColorShow" style="padding-top: 4px;">
                                        边框颜色</div>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <input type="button" id="bgColorButton" style="font-size: 12px; width: 24px; height: 24px;
                                        border: 0px; border-style: none; background-color: #ffffff;" onclick="uf_callColorDlg()" />
                                </td>
                                <td style="">
                                    <div id="bgColorShow" style="padding-top: 4px;">
                                        背景颜色</div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </li>-->
			<li>
				<div>
					<div class="title">
						列设置
						<div class="oper">
							<a href="#" panel="1">un</a>
						</div>
					</div>
					<div class="content">
						<table width="100%" class="attrTable" border="1" cellpadding="0"
							cellspacing="0">
							<tr>
								<td style="">列ID</td>
								<td><select
									style="font-size: 12px; width: 90px; height: 18px; text-align: left"
									id="id_tablecolumn" onchange="ChangeColumn()">
								</select></td>
							</tr>
							<tr>
								<td>列头名</td>
								<td><input type="text" id="cname_table"
									onchange="UpdateColumnData()" /></td>
							</tr>
							<tr>
								<td>第几列</td>
								<td><input type="text" id="colindex"
									onchange="UpdateColumnData()" /></td>
							</tr>
							<tr>
								<td>列类型</td>
								<td id="frm_gridctype"><select id="gridColumnType" name=""
									style="font-size: 12px; width: 90px; height: 18px; text-align: left"
									onchange="changedisplay(this);UpdateColumnData();">
										<option value="ro">只读</option>
										<option value="ed">单行编辑</option>
										<option value="txt">多行编辑</option>
										<option value="coro">下拉列表</option>
										<option value="date">日期</option>
										<option value="time">日期时间</option>
								</select></td>
								<td id="list_gridctype" style="display: none"><select
									id="queryColumnType" name=""
									style="font-size: 12px; width: 90px; height: 18px; text-align: left"
									onchange="changeqlistdisplay(this);UpdateColumnData();">
										<option value="te">文本列</option>
										<option value="bt">按钮列</option>
										<option value="a">超链接列</option>
								</select></td>
							</tr>
							<tr id="keyname_column" style="display: none;">
								<td>按键名</td>
								<td><input type="text" id="column_keyname"
									onchange="UpdateColumnData()" /></td>
							</tr>
							<tr id="qf_column" style="display: none;">
								<td>调用方法名</td>
								<td><input type="text" id="column_qf"
									onchange="UpdateColumnData()" /></td>
							</tr>
							<tr id="qfpara_column" style="display: none;">
								<td>方法参数</td>
								<td><input type="text" id="column_qfpara"
									onchange="UpdateColumnData()" /></td>
							</tr>
							<tr id="custom_st" style="display: none;">
								<td>自定义数据源</td>
								<td><input type="radio" value="1"
									onclick="select_rsrc(this);UpdateColumnData();" name="state"
									style="width: 20px;" /></td>
							</tr>
							<tr id="data_source" style="display: none;">
								<td>数据库数据源</td>
								<td><input type="radio" value="0"
									onclick="select_rsrc(this);UpdateColumnData();" name="state"
									style="width: 20px;" /></td>
							</tr>
							<tr id="custom_source" style="display: none;">
								<td>自定义数据源</td>
								<td><input type="text" id="DataSourceType"
									onchange="UpdateColumnData()" /></td>
							</tr>
							<!--                            <tr id="parent_column" style="display: none;">
                                <td>
                                    父控件列
                                </td>
                                <td>
                                    <input type="text" id="column_parentcl" onchange="UpdateColumnData()"/>
                                </td>
                            </tr>
                            <tr id="parent_relname" style="display: none;">
                                <td>
                                    父关联字段名
                                </td>
                                <td>
                                    <input type="text" id="column_parclname" onchange="UpdateColumnData()" />
                                </td>
                            </tr>-->
							<tr id="cvalue_name" style="display: none;">
								<td>值字段名</td>
								<td><input type="text" id="DbValueName"
									onchange="UpdateColumnData()" /></td>
							</tr>
							<tr id="ctext_name" style="display: none;">
								<td>文本字段名</td>
								<td><input type="text" id="DbTextName"
									onchange="UpdateColumnData()" /></td>
							</tr>
							<tr id="sql_src" style="display: none;">
								<td>数据源SQL</td>
								<td><textarea data-propname="CustomAttribute"
										style="height: 80px; scrollbar-face-color: #9EBFE8; scrollbar-shadow-color: #FFFFFF; scrollbar-highlight-color: #FFFFFF; scrollbar-3dlight-color: #9EBFE8; scrollbar-darkshadow-color: #9EBFE8; scrollbar-track-color: #FFFFFF; scrollbar-arrow-color: #FFFFFF;"
										id="DbSourceSQL" onchange="UpdateColumnData()"></textarea></td>
							</tr>
							<tr id="gridcolumn_sort">
								<td>排序方式</td>
								<td><select id="gridColumnSort" name="gridColumnSort"
									style="font-size: 12px; width: 90px; height: 18px; text-align: left"
									onchange="UpdateColumnData()">
										<option value="str">字符型</option>
										<option value="int">数据型</option>
										<!--                <option value="date">时间型</option>-->
								</select></td>
							</tr>

							<tr>
								<td>列宽</td>
								<td><input id="gridColumnWidth" name="gridColumnWidth"
									type="text" onchange="UpdateColumnData()" /></td>
							</tr>
							<!--                            <tr>
                                <td>
                                    描述
                                </td>
                                <td>
                                    <input id="gridColumnDescribe" type="text" onchange="UpdateColumnData()"/>
                                </td>
                            </tr>-->
							<tr>
								<td>数据集</td>
								<td><select id="dataset" data-propname="DataSet"
									onchange="selectChange('dataset','dataset','datatable');UpdateColumnData()">
										<option value="null" selected="selected">---请选择---</option>
								</select></td>
							</tr>
                            <tr>
                                <td>
                                    数据表
                                </td>
                                <td>
                                    <select id="datatable" data-propname="DataTable" onchange="selectChange('datatable','datatable','datacolumn');UpdateColumnData();">
                                        <option value="null" selected="selected">---请选择---</option>
                                    </select>
                                </td>
                            </tr>
							<tr>
								<td>字段名</td>
								<td><select id="datacolumn" data-propname="DataColumn"
									onchange="UpdateColumnData()">
										<option value="null" selected="selected">---请选择---</option>
								</select></td>
							</tr>

							<!--                            <tr>
                                <td>
                                    Text字段名
                                </td>
                                <td>
                                    <input id="txtColumnFieldText" size="16" type="text" onchange="UpdateColumnData()"/>
                                </td>
                            </tr>-->
							<tr>
								<td></td>
								<td><input type="hidden" data-propname="TableColumnData"
									id="tableColumnData" /></td>
							</tr>
							<tr>
								<td align="right"><input type="button" value="增加列"
									onclick="AddColumn()" style="width: 48px; font-size: 12px" />
								</td>
								<td align="right"><input onclick="DeleteColumnData()"
									type="button" value="删除列"
									style="width: 48px; font-family: 12px;" /></td>
							</tr>
						</table>
					</div>
				</div>
			</li>
			<li id="cascadeparas" style="display:none">
				<div>
					<div class="title">
						事件
						<div class="oper">
							<a href="#" panel="1">un</a>
						</div>
					</div>
					<div class="content">
						<table width="100%" class="attrTable" border="1" cellpadding="0"
							cellspacing="0">
							<tr>
								<td style="width: 60px;">行选参数</td>
								<td><input type="text" data-propname="cascadeparas"/>
								</td>
							</tr>
						</table>
					</div>
				</div>
			</li>
		</ul>
		<script src="../../../sfk/sfk_regexpValid.js" type="text/javascript"></script>
		<script type="text/javascript" language="javascript">
			Valid.bind({
				elem : document.getElementById("id_table"),
				type : "NoEmpty",
				msg : "ID不能为空！",
				evts : [ "blur" ]
			});
			Valid.bind({
				elem : document.getElementById("id_table"),
				type : "CommonChar",
				msg : "ID不能有特殊字符！",
				evts : [ "blur" ]
			});
			Valid.bind({
				elem : document.getElementById("name_table"),
				type : "NoEmpty",
				msg : "中文名不能为空！",
				evts : [ "blur" ]
			});
			Valid.bind({
				elem : document.getElementById("name_table"),
				type : "CommonChar",
				msg : "中文名不能有特殊字符！",
				evts : [ "blur" ]
			});

			Valid.bind({
				elem : document.getElementById("left_table"),
				type : "FloatOnly",
				msg : "左只能为数字！",
				evts : [ "blur" ]
			});
			Valid.bind({
				elem : document.getElementById("top_table"),
				type : "FloatOnly",
				msg : "上只能为数字！",
				evts : [ "blur" ]
			});
			Valid.bind({
				elem : document.getElementById("width_table"),
				type : "FloatOnly",
				msg : "宽只能为数字！",
				evts : [ "blur" ]
			});
			Valid.bind({
				elem : document.getElementById("height_table"),
				type : "FloatOnly",
				msg : "高只能为数字！",
				evts : [ "blur" ]
			});
			Valid.bind({
				elem : document.getElementById("cname_table"),
				type : "CommonChar",
				msg : "列头名不能有特殊字符！",
				evts : [ "blur" ]
			});
			Valid.bind({
				elem : document.getElementById("gridColumnWidth"),
				type : "FloatOnly",
				msg : "列宽只能是数字！",
				evts : [ "blur" ]
			});
			var Columns = [];

			//新增
			function AddColumnData(columnData) {
				Columns.push(columnData);
				SaveTableColumnData();
			}
			function changeqlistdisplay(obj) {
				if (obj.value == "bt" || obj.value == "a" ) {
					document.getElementById("gridcolumn_sort").style.display = "none";
					document.getElementById("keyname_column").style.display = "";
					document.getElementById("qf_column").style.display = "";
					document.getElementById("qfpara_column").style.display = "";
				} else {
					document.getElementById("gridcolumn_sort").style.display = "";
					document.getElementById("keyname_column").style.display = "none";
					document.getElementById("qf_column").style.display = "none";
					document.getElementById("qfpara_column").style.display = "none";
				}
			}
			function changedisplay(obj) {
				if (obj.value == "coro") {
					document.getElementById("custom_st").style.display = "";
					document.getElementById("data_source").style.display = "";
					document.getElementById("custom_source").style.display = "";
					document.getElementById("cvalue_name").style.display = "";
					document.getElementById("ctext_name").style.display = "";
					document.getElementById("sql_src").style.display = "";
				} else {
					document.getElementById("custom_st").style.display = "none";
					document.getElementById("data_source").style.display = "none";
					document.getElementById("custom_source").style.display = "none";
					document.getElementById("cvalue_name").style.display = "none";
					document.getElementById("ctext_name").style.display = "none";
					document.getElementById("sql_src").style.display = "none";
				}

			}
			function select_rsrc(objr) {
				if (objr.value == "1") {

					document.getElementById("cvalue_name").style.display = "none";
					document.getElementById("ctext_name").style.display = "none";
					document.getElementById("sql_src").style.display = "none";
					document.getElementById("custom_source").style.display = "";
				} else {

					document.getElementById("cvalue_name").style.display = "";
					document.getElementById("ctext_name").style.display = "";
					document.getElementById("sql_src").style.display = "";
					document.getElementById("custom_source").style.display = "none";
				}
			}
			//查询
			function GetColumnData(index) {
				for ( var i = 0; i < Columns.length; i++) {
					if (Columns[i].ColumnID == index) {
						return Columns[i]
					}
				}
			}

			//删除当前列
			function DeleteColumnData() {
				//删除列下拉列表选择项
				var select = document.getElementById("id_tablecolumn"),
					DelId = select.value;
				if (DelId == "") {
					alert("没有列,请增加列");
				} else {
					for ( var i = 0; i < Columns.length; i++) {
						if (Columns[i].ColumnID == DelId) {
							Columns.splice(i, i ? i : 1);
						}
					}
				}		
				Columns.length == 0 && (document.getElementById("tableColumnData").value = "");		
				select.options[select.selectedIndex] = null;
				ChangeColumn();
				//..删除后初始化页面
				//同步列数据到Columns
				SaveTableColumnData();
			}

			//更新
			function UpdateColumnData() {
				//收集当前列数据
				var Id_Columns = document.getElementById("id_tablecolumn").value;
				for ( var i = 0; i < Columns.length; i++) {
					if (Columns[i].ColumnID == Id_Columns) {
						Columns[i].ColumnName = document
								.getElementById("cname_table").value;
						Columns[i].ColumnIndex = document
								.getElementById("colindex").value;
						if (Columns[i].ColumnIsQ == "form") {
							Columns[i].ColumnType = document
									.getElementById("gridColumnType").value;
							if (document.getElementsByName("state")[0].checked == true) {
								Columns[i].DataSourceType = "1";
							}
							if (document.getElementsByName("state")[1].checked == true) {
								Columns[i].DataSourceType = "0"
							}
							Columns[i].TextDataSource = document
									.getElementById("DataSourceType").value;
							Columns[i].DbValueName = document
									.getElementById("DbValueName").value;
							Columns[i].DbTextName = document
									.getElementById("DbTextName").value;
							Columns[i].DbSourceSQL = document
									.getElementById("DbSourceSQL").value;
							Columns[i].ColumnColumnSort = document
									.getElementById("gridColumnSort").value;
							Columns[i].ColumnWidth = document
									.getElementById("gridColumnWidth").value;
							Columns[i].ColumnDataSet = document
									.getElementById("dataset").value;
							Columns[i].ColumnDataTable = document
									.getElementById("datatable").value;
							Columns[i].ColumnFieldValue = document
									.getElementById("datacolumn").value;
						} else {

							Columns[i].ColumnType = document
									.getElementById("queryColumnType").value;
							if (Columns[i].ColumnType == "bt") {
								Columns[i].ColumnColumnSort = "null";
							} else {
								Columns[i].ColumnColumnSort = document
										.getElementById("gridColumnSort").value;
							}

							Columns[i].Columnbtname = document
									.getElementById("column_keyname").value;
							Columns[i].Columnqfunc = document
									.getElementById("column_qf").value;
							Columns[i].Columnqfuncpara = document
									.getElementById("column_qfpara").value;
							Columns[i].ColumnWidth = document
									.getElementById("gridColumnWidth").value;
							Columns[i].ColumnDataSet = document
									.getElementById("dataset").value;
							Columns[i].ColumnDataTable = document
									.getElementById("datatable").value;
							Columns[i].ColumnFieldValue = document
									.getElementById("datacolumn").value;
						}
					}
				}

				//同步列数据到Columns
				SaveTableColumnData();
			}

			//初始化列配置数据
			function InitColumnData(columnData) {
				var NewColumns;
				if (typeof columnData == "undefined") {
					var colData = document.getElementById("tableColumnData").value;
					if (typeof colData != "undefined" && colData != "") {
						Columns = eval(colData);
						NewColumns = Columns[0];
						InitColumnData(NewColumns);
					}
				} else {
					var select = document.getElementById("id_tablecolumn");
					select.length = 0;
					NewColumns = columnData;
					//初始化页面
					for ( var i = 0; i < Columns.length; i++) {
						var opt = document.createElement("option")
						opt.value = opt.text = Columns[i].ColumnID;
						select.options.add(opt);
					}

					select.value = NewColumns.ColumnID;
					document.getElementById("cname_table").value = NewColumns.ColumnName;
					document.getElementById("colindex").value = NewColumns.ColumnIndex;
					if (NewColumns.ColumnIsQ == "form") {
						document.getElementById("gridColumnType").value = NewColumns.ColumnType;
						if (NewColumns.DataSourceType == "1") {
							document.getElementsByName("state")[0].checked = true;
							document.getElementById("custom_st").style.display = "";
							document.getElementById("data_source").style.display = "";
							document.getElementById("cvalue_name").style.display = "none";
							document.getElementById("ctext_name").style.display = "none";
							document.getElementById("sql_src").style.display = "none";
							document.getElementById("custom_source").style.display = "";
						}
						if (NewColumns.DataSourceType == "0") {
							document.getElementsByName("state")[1].checked = true;
							document.getElementById("custom_st").style.display = "";
							document.getElementById("data_source").style.display = "";
							document.getElementById("cvalue_name").style.display = "";
							document.getElementById("ctext_name").style.display = "";
							document.getElementById("sql_src").style.display = "";
							document.getElementById("custom_source").style.display = "none";
						}
						document.getElementById("DataSourceType").value = NewColumns.TextDataSource;
						document.getElementById("DbValueName").value = NewColumns.DbValueName;
						document.getElementById("DbTextName").value = NewColumns.DbTextName;
						document.getElementById("DbSourceSQL").value = NewColumns.DbSourceSQL;
						document.getElementById("gridColumnSort").value = NewColumns.ColumnColumnSort;
						document.getElementById("gridColumnWidth").value = NewColumns.ColumnWidth;
						document.getElementById("dataset").value = NewColumns.ColumnDataSet;
						TableSelectInit("dataset", "datatable");
						document.getElementById("datatable").value = NewColumns.ColumnDataTable;
						ColumnSelectInit('datatable', 'datacolumn');
						document.getElementById("datacolumn").value = NewColumns.ColumnFieldValue;
						if (NewColumns.DataSourceType == "") {
							document.getElementsByName("state")[0].checked = false;
							document.getElementsByName("state")[1].checked = false;
							if (NewColumns.ColumnType == "coro") {
								document.getElementById("custom_st").style.display = "";
								document.getElementById("data_source").style.display = "";
								document.getElementById("custom_source").style.display = "";
								document.getElementById("cvalue_name").style.display = "";
								document.getElementById("ctext_name").style.display = "";
								document.getElementById("sql_src").style.display = "";
							} else {
								document.getElementById("custom_st").style.display = "none";
								document.getElementById("data_source").style.display = "none";
								document.getElementById("custom_source").style.display = "none";
								document.getElementById("cvalue_name").style.display = "none";
								document.getElementById("ctext_name").style.display = "none";
								document.getElementById("sql_src").style.display = "none";
							}
						}
					} else {
						document.getElementById("queryColumnType").value = NewColumns.ColumnType;
						if (NewColumns.ColumnType == "te") {
							document.getElementById("keyname_column").style.display = "none";
							document.getElementById("qf_column").style.display = "none";
							document.getElementById("qfpara_column").style.display = "none";
							document.getElementById("gridcolumn_sort").style.display = "";
						} else {
							document.getElementById("keyname_column").style.display = "";
							document.getElementById("qf_column").style.display = "";
							document.getElementById("qfpara_column").style.display = "";
							document.getElementById("gridcolumn_sort").style.display = "none";
						}
						document.getElementById("gridColumnSort").value = NewColumns.ColumnColumnSort;
						document.getElementById("column_keyname").value = NewColumns.Columnbtname;
						document.getElementById("column_qf").value = NewColumns.Columnqfunc;
						document.getElementById("column_qfpara").value = NewColumns.Columnqfuncpara;
						document.getElementById("gridColumnWidth").value = NewColumns.ColumnWidth;
						document.getElementById("dataset").value = NewColumns.ColumnDataSet;
						TableSelectInit("dataset", "datatable");
						document.getElementById("datatable").value = NewColumns.ColumnDataTable;
						//ColumnSelectInit('datatable', 'datacolumn');
						document.getElementById("datacolumn").value != "null" && selectChange('dataset','dataset','datacolumn');
						document.getElementById("datacolumn").value = NewColumns.ColumnFieldValue;
					}
				}
			}

			//保存表列配置数据
			function SaveTableColumnData() {
				// 把Columns转 并赋值
				var strColumnsData = obj2str(Columns);
				document.getElementById("tableColumnData").value = strColumnsData;
				$E.fire(document.getElementById("tableColumnData"), "change");
			}

			//保存当前列数据
			function SaveCurColumnData() {
				//查询当前选中的列对象
				var Id_Columns = document.getElementById("id_tablecolumn").value;
				var curColumnData = GetColumnData(Id_Columns);
				NewColumns = eval(curColumnData);

			}

			//列下拉列表change事件
			function ChangeColumn() {
				//查询当前选中的列对象
				var Id_Columns = document.getElementById("id_tablecolumn").value;
				var curColumnData = GetColumnData(Id_Columns);
				InitColumnData(curColumnData);
				// UpdateColumnData(Id_Columns);
			}

			//添加列
			function AddColumn() {
				//在下拉列表中添加新列的项
				var columnid, column_newid, result;
				var select = document.getElementById("id_tablecolumn");
				if (select.length == 0) {
					column_newid = "column_" + 1;
				} else {
					var slength = select[select.length - 1].value,
						index = slength.indexOf("_");
					result = slength.substring(index + 1);
					var opt = document.createElement("option");
					column_newid = "column_" + [ result * 1 + 1 ];
				}
				if (IsQuery == "query") {
					var newColumnData = {
						ColumnID : column_newid,
						ColumnName : column_newid,
						ColumnIndex : "" + (result ? result * 1 + 1 : 1) + "",
						ColumnType : "te",
						ColumnColumnSort : "int",
						Columnbtname : "",
						Columnqfunc : "",
						Columnqfuncpara : "",
						ColumnWidth : "150",
						ColumnDataSet : "null",
						ColumnDataTable : "null",
						ColumnFieldValue : "null",
						ColumnIsQ : "query"
					}
				} else {
					var newColumnData = {
						ColumnID : column_newid,
						ColumnName : column_newid,
						ColumnIndex : "" + (result ? result * 1 + 1 : 1) + "",
						ColumnType : "ro",
						ColumnColumnSort : "int",
						DataSourceType : "",
						TextDataSource : "",
						DbValueName : "",
						DbTextName : "",
						DbSourceSQL : "",
						ColumnWidth : "150",
						ColumnDataSet : "null",
						ColumnDataTable : "null",
						ColumnFieldValue : "null",
						ColumnIsQ : "form"
					}
				}

				AddColumnData(newColumnData);
				//初始化新增的列配置项
				InitColumnData(newColumnData);
			}

			function obj2str(o) {//核心函数
				if (o == undefined) {
					return "";
				}
				var r = [];
				if (typeof o == "string")
					return "\""
							+ o.replace(/([\"\\])/g, "\\$1").replace(/(\n)/g,
									"\\n").replace(/(\r)/g, "\\r").replace(
									/(\t)/g, "\\t") + "\"";
				if (typeof o == "object") {
					if (!o.sort) {
						for ( var i in o)
							r.push("\"" + i + "\":" + obj2str(o[i]));
						if (!!document.all
								&& !/^\n?function\s*toString\(\)\s*\{\n?\s*\[native code\]\n?\s*\}\n?\s*$/
										.test(o.toString)) {
							r.push("toString:" + o.toString.toString());
						}
						r = "{" + r.join() + "}"
					} else {
						for ( var i = 0; i < o.length; i++)
							r.push(obj2str(o[i]))
						r = "[" + r.join() + "]";
					}
					return r;
				}
				return o.toString().replace(/\"\:/g, '":""');
			}
		</script>
	</div>
	<input type="hidden" value="" id="IsQueryList"/>
</body>
</html>
